; include macro file (ie: copy paste it's content here)
%include "macros.asm"
; TODO: include macro file for the main macro

; TODO: all those extern will be comming from a macro generated by cpp code
extern EXIT_SUCCESS, LF                         ; from constants.asm
extern decreaseIndex                            ; from decreaseIndex.asm
extern increaseIndex                            ; from increaseIndex.asm
extern printData                                ; from printData.asm
extern readData                                 ; from readData.asm

section .data
global dataArr, dataArrMaxSize, dataIndex       ; used to export symbols to be accessed from other files
dataArrMaxSize equ 300                          ; maximum size of dataArr
dataArr TIMES dataArrMaxSize db 0               ; 300 element bytes array initialized to 0
dataIndex dq 0                                  ; 64 bit integer variable

section .text
global _start
_start:
    addToData 'H'
    call printData
    call increaseIndex
    addToData LF
    call printData

    ; TODO: include main macro (it will be generated by the cpp code)
    ; mov byte [data], 'A'
    ; lea rdi, data
    ; mov si, 1
    ; mov dl, 1
    ; call print

    ; mov dil, 'C'
    ; call printChar
    ; mov dil, LF
    ; call printChar
    exit EXIT_SUCCESS